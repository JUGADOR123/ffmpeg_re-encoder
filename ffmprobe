
 cmd = "ffprobe -v quiet -print_format json -show_streams"rs = os.walk(folder)
    for root, dirs, files in rs:
        if files:
            for file in files:
                ext=splitext(file)
                if ext[1] in extensions:
                    if ext[1] not in containers:
                        containers.append(ext[1])
                    filepath=os.path.join(root,file)
                    args.append(filepath)
                    try:
                        output=subprocess.check_output(args).decode("utf-8")
                    except:
                        print(f"File errored out: {file}")
                        time.sleep(5)
                    #Starts the inspection of a new file    
                    print("---------------------------------------------------------------------")
                    print(f"Now inspecting: {file}")
                    #loads important data
                    data=json.loads(output)
                    #iterates through all data streams
                    for stream in data["streams"]:
                        #attachment stream only has codec type most of the time
                        if stream["codec_type"]=="attachment":
                            ctype=stream["codec_type"]
                        else:
                            cname=stream["codec_name"]
                            ctype=stream["codec_type"]
                        #checks what kinds of codecs are in the whole directory
                        if ctype=="audio" and cname not in audio_codecs:
                            audio_codecs.append(cname)
                        if ctype=="video" and cname not in video_codecs:
                            video_codecs.append(cname)



                                    newdir = []
        for root, sub, file in os.walk(self.folder, topdown=False):
            if self.blacklist in root:
                nd = root.replace(self.blacklist, " ")
                print(f"New Directory: {nd}")

                os.rename(root, nd)
            else:
                pass
                # print(f"No change required: {root}")